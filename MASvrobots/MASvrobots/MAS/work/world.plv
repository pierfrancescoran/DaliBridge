 worldFilename('conf/world.txt'). :-dynamic worldWidth/1. :-dynamic worldHeight/1. :-dynamic worldCell/3. :-dynamic worldAgent/2. line_of_sight(4). :-dynamic started/1. starting(this):-not(started(this)). evi(starting(X)):-main,assert(started(this)). main:-use_module(library(random)),use_module('mas_modules/utils.txt'),use_module('mas_modules/world_objects.txt'),retrieveIdentity,nl,write('Started'),nl,loadWorldFromFile. loadWorldFromFile:-nl,write('Loading world file...'),nl,worldFilename(Filename),getFileLines(Filename,Lines),eachFileLine(Lines,handleWorldLine),first(Lines,FirstLine),calculateWorldWidth(FirstLine),calculateWorldHeight(Lines),worldWidth(Width),worldHeight(Height),nl,write('World Width: '),write(Width),nl,write('World Height: '),write(Height),nl. eachHandler(handleWorldLine,Line,Index):-name(Line,LineCharList),each(LineCharList,handler(handleWorldLineChar,Index)). eachHandler(handler(handleWorldLineChar,LineIndex),Char,CharIndex):-char_code(CharAtom,Char),saveWorldCell(CharIndex,LineIndex,CharAtom). saveWorldCell(X,Y,Type):-assert(worldCell(X,Y,Type)),write('('),write(X),write(','),write(Y),write('): '),write(Type),nl. calculateWorldWidth(WorldLine):-name(WorldLine,WorldLineCharList),length(WorldLineCharList,Width),assert(worldWidth(Width)). calculateWorldHeight(WorldLines):-length(WorldLines,Length),Height is Length-1,assert(worldHeight(Height)). eve(received(From,join)):-nl,write('Received join request from '),write(From),nl,worldObject(AgentCellType,agent),worldCell(X,Y,AgentCellType),\+worldAgent(AnotherAgent,position(X,Y)),assert(worldAgent(From,position(X,Y))),assert(worldAgent(From,health(100))),write('Sending acceptance...'),nl,worldWidth(WorldWidth),worldHeight(WorldHeight),send(From,joined,[X,Y,WorldWidth,WorldHeight]). eve(received(From,sense)):-nl,write('Received sensing request from '),write(From),write(', press enter to continue: '),nl,get_code(_),worldAgent(From,position(FromX,FromY)),write('Sending position...'),nl,send(From,'position',[FromX,FromY]),line_of_sight(Span),calculateRect(FromX,FromY,Span,Top,Left,Width,Height),write('Sending sensing information...'),nl,sendRectCells(From,Top,Left,Width,Height),send(From,'senseEnd'). calculateRect(X,Y,Span,Top,Left,Width,Height):-calculateRectTop(Y,Span,Top),calculateRectLeft(X,Span,Left),calculateRectHeight(Y,Top,Span,Height),calculateRectWidth(X,Left,Span,Width). calculateRectTop(Y,Span,Top):-TopCandidate is Y-Span,(TopCandidate<0,Top is 0;Top is TopCandidate). calculateRectLeft(X,Span,Left):-LeftCandidate is X-Span,(LeftCandidate<0,Left is 0;Left is LeftCandidate). calculateRectHeight(Y,Top,Span,Height):-worldHeight(WorldHeight),TopSpan is Y-Top,(WorldHeight-Y<Span,BottomSpan is WorldHeight-Y;BottomSpan is Span),Height is TopSpan+1+BottomSpan. calculateRectWidth(X,Left,Span,Width):-worldWidth(WorldWidth),LeftSpan is X-Left,(WorldWidth-X<Span,RightSpan is WorldWidth-X;RightSpan is Span),Width is LeftSpan+1+RightSpan. createRectCellsInfo(Top,Left,Width,Height,ResultList):-createRectCellsInfo(Top,Left,Width,Height,[],ResultList,0). createRectCellsInfo(Top,Left,Width,Height,CurrentList,ResultList,Row):-Row=Height,ResultList=CurrentList. createRectCellsInfo(Top,Left,Width,Height,CurrentList,ResultList,Row):-append(CurrentList,[newRow],NewCurrentList),createRectCellsInfo(Top,Left,Width,Height,NewCurrentList,ResultList,Row,0). createRectCellsInfo(Top,Left,Width,Height,CurrentList,ResultList,Row,Column):-Column=Width,NextRow is Row+1,createRectCellsInfo(Top,Left,Width,Height,CurrentList,ResultList,NextRow). createRectCellsInfo(Top,Left,Width,Height,CurrentList,ResultList,Row,Column):-X is Left+Column,Y is Top+Row,worldCell(X,Y,Type),append(CurrentList,[X,Y,Type],NewCurrentList),NextColumn is Column+1,createRectCellsInfo(Top,Left,Width,Height,NewCurrentList,ResultList,Row,NextColumn). sendRectCells(To,Top,Left,Width,Height):-forRange(0,Height,handler(sendRectRowCells,To,Top,Left,Width)). forRangeHandler(handler(sendRectRowCells,To,Top,Left,Width),I):-send(To,'senseNewY'),forRange(0,Width,handler(sendRectCell,To,Top,Left,I)). forRangeHandler(handler(sendRectCell,To,Top,Left,I),J):-X is Left+J,Y is Top+I,worldCell(X,Y,Type),send(To,'cell',[X,Y,Type]). eve(received(From,move,FromX,FromY,ToX,ToY)):-nl,write('Received move request from '),write(From),nl,moveObject(FromX,FromY,ToX,ToY),retract(worldAgent(From,position(_,_))),assert(worldAgent(From,position(ToX,ToY))). moveObject(FromX,FromY,ToX,ToY):-worldCell(FromX,FromY,FromCellType),worldCell(ToX,ToY,ToCellType),worldObject(ToCellType,ToObject),ToObject=blank,write('Moving object...'),nl,retract(worldCell(FromX,FromY,FromCellType)),assert(worldCell(FromX,FromY,ToCellType)),retract(worldCell(ToX,ToY,ToCellType)),assert(worldCell(ToX,ToY,FromCellType)). eve(received(From,consume,X,Y)):-nl,write('Received consume request from '),write(From),nl,consumeObject(X,Y). consumeObject(X,Y):-worldObject(BlankCellType,blank),write('Consuming object...'),nl,retract(worldCell(X,Y,CellType)),assert(worldCell(X,Y,BlankCellType)). eve(received(From,attack,X,Y)):-worldAgent(Agent,position(X,Y)),nl,write('agente '),write(From),write(' ha trovato '),write(Agent),nl,write(Agent),write('aspetta'),nl. :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_527009,Ontology,_527013),_527003),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_527047)),a(message(Ag,propose(A,[_527047],AgI))),retractall(ext_agent(Ag,_527085,Ontology,_527089)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_526883,Ontology,_526887),_526877),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_526953,Ontology,_526957)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_526771,Ontology,_526775),_526765),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_526827,Ontology,_526831)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_526335),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_526369),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_526151). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_525999),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_525947),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_525823,_525825)),clause(agente(_525845,_525847,_525849,S),_525841),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_525617,_525619,_525621,S),_525613),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_525717,[]),repeat,read(_525717,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_525717). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(learned(_856053)):-cd(learned(_856053)),assert(do_action(learned(_856053),program)).
cd(learned(_856053)):-true.
a(message(_856061,confirm(learn(_856073),_856069))):-cd(message(_856061,confirm(learn(_856073),_856069))),assert(do_action(message(_856061,confirm(learn(_856073),_856069)),program)).
cd(message(_856061,confirm(learn(_856073),_856069))):-true.
a(message(_856081,reply(received(_856093),_856089))):-cd(message(_856081,reply(received(_856093),_856089))),assert(do_action(message(_856081,reply(received(_856093),_856089)),program)).
cd(message(_856081,reply(received(_856093),_856089))):-true.
a(message(_856081,accept_proposal(_856089,[],_856111))):-cd(message(_856081,accept_proposal(_856089,[],_856111))),assert(do_action(message(_856081,accept_proposal(_856089,[],_856111)),program)).
cd(message(_856081,accept_proposal(_856089,[],_856111))):-true.
a(message(_856081,failure(_856089,motivation(false_conditions),_856129))):-cd(message(_856081,failure(_856089,motivation(false_conditions),_856129))),assert(do_action(message(_856081,failure(_856089,motivation(false_conditions),_856129)),program)).
cd(message(_856081,failure(_856089,motivation(false_conditions),_856129))):-true.
a(message(_856081,inform(agree(_856093),values(no),_856089))):-cd(message(_856081,inform(agree(_856093),values(no),_856089))),assert(do_action(message(_856081,inform(agree(_856093),values(no),_856089)),program)).
cd(message(_856081,inform(agree(_856093),values(no),_856089))):-true.
a(message(_856081,inform(agree(_856093),values(yes),_856089))):-cd(message(_856081,inform(agree(_856093),values(yes),_856089))),assert(do_action(message(_856081,inform(agree(_856093),values(yes),_856089)),program)).
cd(message(_856081,inform(agree(_856093),values(yes),_856089))):-true.
a(message(_856081,inform(query_ref(_856093,_856209),motivation(no_values),_856089))):-cd(message(_856081,inform(query_ref(_856093,_856209),motivation(no_values),_856089))),assert(do_action(message(_856081,inform(query_ref(_856093,_856209),motivation(no_values),_856089)),program)).
cd(message(_856081,inform(query_ref(_856093,_856209),motivation(no_values),_856089))):-true.
a(message(_856081,inform(query_ref(_856093,_856209),values(_856241),_856089))):-cd(message(_856081,inform(query_ref(_856093,_856209),values(_856241),_856089))),assert(do_action(message(_856081,inform(query_ref(_856093,_856209),values(_856241),_856089)),program)).
cd(message(_856081,inform(query_ref(_856093,_856209),values(_856241),_856089))):-true.
a(message(_856081,propose(_856089,[_856261],_856111))):-cd(message(_856081,propose(_856089,[_856261],_856111))),assert(do_action(message(_856081,propose(_856089,[_856261],_856111)),program)).
cd(message(_856081,propose(_856089,[_856261],_856111))):-true.
a(message(_856081,refuse(agree(variable),motivation(refused_variables),_856089))):-cd(message(_856081,refuse(agree(variable),motivation(refused_variables),_856089))),assert(do_action(message(_856081,refuse(agree(variable),motivation(refused_variables),_856089)),program)).
cd(message(_856081,refuse(agree(variable),motivation(refused_variables),_856089))):-true.
a(message(_856081,refuse(query_ref(variable),motivation(refused_variables),_856089))):-cd(message(_856081,refuse(query_ref(variable),motivation(refused_variables),_856089))),assert(do_action(message(_856081,refuse(query_ref(variable),motivation(refused_variables),_856089)),program)).
cd(message(_856081,refuse(query_ref(variable),motivation(refused_variables),_856089))):-true.
a(message(_856081,reject_proposal(_856089,[],_856111))):-cd(message(_856081,reject_proposal(_856089,[],_856111))),assert(do_action(message(_856081,reject_proposal(_856089,[],_856111)),program)).
cd(message(_856081,reject_proposal(_856089,[],_856111))):-true.
a(message(_856341,inform(_856347,motivation(refused_message),_856129))):-cd(message(_856341,inform(_856347,motivation(refused_message),_856129))),assert(do_action(message(_856341,inform(_856347,motivation(refused_message),_856129)),program)).
cd(message(_856341,inform(_856347,motivation(refused_message),_856129))):-true.
a(message(_856363,send_message(sent_rmi(_856093,_856377,_856379),_856081))):-cd(message(_856363,send_message(sent_rmi(_856093,_856377,_856379),_856081))),assert(do_action(message(_856363,send_message(sent_rmi(_856093,_856377,_856379),_856081)),program)).
cd(message(_856363,send_message(sent_rmi(_856093,_856377,_856379),_856081))):-true.
eve_cond(received(_895133,join)):-cd(received(_895133,join)),eve(received(_895133,join)).
cd(received(_895133,join)):-true.
eve_cond(received(_895133,sense)):-cd(received(_895133,sense)),eve(received(_895133,sense)).
cd(received(_895133,sense)):-true.
eve_cond(received(_895133,attack,_895157,_895159)):-cd(received(_895133,attack,_895157,_895159)),eve(received(_895133,attack,_895157,_895159)).
cd(received(_895133,attack,_895157,_895159)):-true.
eve_cond(received(_895133,consume,_895157,_895159)):-cd(received(_895133,consume,_895157,_895159)),eve(received(_895133,consume,_895157,_895159)).
cd(received(_895133,consume,_895157,_895159)):-true.
eve_cond(received(_895133,move,_895185,_895187,_895189,_895191)):-cd(received(_895133,move,_895185,_895187,_895189,_895191)),eve(received(_895133,move,_895185,_895187,_895189,_895191)).
cd(received(_895133,move,_895185,_895187,_895189,_895191)):-true.